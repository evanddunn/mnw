{"ast":null,"code":"var _jsxFileName = \"/Users/evan/Documents/MNW/mnw/src/views/Reading.js\";\nimport React from 'react';\nexport default class Reading extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      admins: []\n    };\n  }\n\n  async componentDidMount() {\n    let a = await (await fetch('/admin')).json();\n    this.setState({\n      admins: a\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, \"This is Reading\", this.state.admins.map(a => {\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        key: a.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }\n      }, a.username);\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/evan/Documents/MNW/mnw/src/views/Reading.js"],"names":["React","Reading","Component","constructor","props","state","admins","componentDidMount","a","fetch","json","setState","render","map","id","username"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAuC;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAED,QAAMC,iBAAN,GAA0B;AACxB,QAAIC,CAAC,GAAG,MAAM,CAAC,MAAMC,KAAK,CAAC,QAAD,CAAZ,EAAwBC,IAAxB,EAAd;AACA,SAAKC,QAAL,CAAc;AACZL,MAAAA,MAAM,EAAEE;AADI,KAAd;AAGD;;AAEDI,EAAAA,MAAM,GAAI;AACR,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAGI,KAAKP,KAAL,CAAWC,MAAX,CAAkBO,GAAlB,CAAsBL,CAAC,IAAI;AACzB;AAAA;AAAK,QAAA,GAAG,EAAEA,CAAC,CAACM,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBN,CAAC,CAACO,QAAnB;AACD,KAFD,CAHJ,CADF;AAUD;;AA1BiD","sourcesContent":["import React from 'react';\n\nexport default class Reading extends React.Component  {\n    constructor(props) {\n      super(props);\n      this.state = {\n        admins: [],\n      };\n    }\n\n    async componentDidMount() {\n      let a = await (await fetch('/admin')).json();\n      this.setState({\n        admins: a,\n      });\n    }\n\n    render () {\n      return (\n        <div>\n          This is Reading\n          {\n            this.state.admins.map(a => {\n              <div key={a.id}>{a.username}</div>\n            })\n          }\n        </div>\n      )\n    }\n  }"]},"metadata":{},"sourceType":"module"}